name: CI

on: [push]


jobs:
  try-develop:
    runs-on: ubuntu-latest
    steps:
    - run: git config --global init.defaultBranch main
    - uses: actions/checkout@v5
    - uses: cachix/install-nix-action@v31
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        extra_nix_config: |
          experimental-features = nix-command flakes
    - uses: cachix/cachix-action@v15
      with:
        name: maxhbr
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
    - run: nix develop --impure --command echo "success"

  nixfmt-check:
    runs-on: ubuntu-latest
    steps:
    - run: git config --global init.defaultBranch main
    - uses: actions/checkout@v5
    - uses: cachix/install-nix-action@v31
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        extra_nix_config: |
          experimental-features = nix-command flakes
    - run: ./nixfmtall.sh --check

  build-os:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        config:
          - { host: f13 , action: "build --dry-run" }
          # - { host: f13 , action: "build" }
          - { host: workstation , action: "build --dry-run" }
          # - { host: workstation , action: "build" }
          - { host: nas , action: "build --dry-run" }
          # - { host: nas , action: "build" }
          - { host: spare , action: "build --dry-run" }
          # - { host: spare , action: "build" }
          - { host: vserver , action: "build --dry-run" }
          # - { host: vserver , action: "build" }
      fail-fast: false

    steps:
    - run: git config --global init.defaultBranch main
    - uses: actions/checkout@v5
    - uses: cachix/install-nix-action@v31
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
    - run: nix ${{ matrix.config.action }} -L '.#nixosConfigurations.'${{ matrix.config.host }}'.config.system.build.toplevel'

  build-iso:
    runs-on: ubuntu-latest

    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - run: git config --global init.defaultBranch main
    - uses: actions/checkout@v5
    - uses: cachix/install-nix-action@v31
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
    - run: ./build-iso-image.sh
  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: myconfig-iso-${{ matrix.config.name }}
  #       path: '__out/**/*.iso'
  #     if: steps.isNonDry.outputs.result
